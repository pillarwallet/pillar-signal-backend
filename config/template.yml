twilio: # Twilio gateway configuration
  accountId: "{TWILIO_ID}"
  accountToken:  "{TWILIO_TK}"
  numbers: # Numbers allocated in Twilio
    - {TWILIO_NO}
    - # Second number
    - # Third number
    - # ...
    - # Nth number
  messagingServicesId: "{TWILIO_MSG_ID}"  # demo Jude
  localDomain: "{TWILIO_LOC_DOM}" # Domain Twilio can connect back to for calls. Should be domain of your service.

push:
  queueSize: 1000 # Size of push pending queue

redphone:
  authKey: # Deprecated

turn: # TURN server configuration
  secret:  none # TURN server secret
  uris:
    - stun:yourdomain:80
    - stun:yourdomain.com:443
    - turn:yourdomain:443?transport=udp
    - turn:etc.com:80?transport=udp

cache: # Redis server configuration for cache cluster
  url: redis://:{REDIS_PWD}@127.0.0.1:6379

directory: # Redis server configuration for directory cluster
  url: redis://:{REDIS_PWD}@127.0.0.1:6379

messageStore: # Postgresql database configuration for message store
  driverClass: org.postgresql.Driver
  user: {POSTGRES_USER}
  password: {POSTGRES_PWD}
  url: jdbc:postgresql://{DB_HOST}:5432/messagestore
attachments: # AWS S3 configuration
  accessKey: none
  accessSecret: none
  bucket: none

profiles: # AWS S3 configuration
  accessKey: none
  accessSecret: none
  bucket: none
  region: none

database: # Postgresql database configuration
  driverClass: org.postgresql.Driver
  user: {POSTGRES_USER}
  password: {POSTGRES_PWD}
  url: jdbc:postgresql://{DB_HOST}:5432/pillarmessaging
apn: # Apple Push Notifications configuration
  bundleId: none
  pushCertificate: none
  pushKey: none

fcm: # FCM Configuration
  projectNumber: {FCM_PROJ}
  apiKey: {FCM_APIKEY}
  jsonPath: config/firebase-auth.json

jwt:
  publicKeyPath: ../certs/platform_auth_pub2048.pem

server:
  applicationConnectors:
    - type: http
      port: 8080
    - type: https
      port: 8443
      keyStorePath: config/example.keystore
      keyStorePassword: example
      validateCerts: false
  adminConnectors:
    - type: http
      port: 8081
    - type: https
      port: 8444
      keyStorePath: config/example.keystore
      keyStorePassword: example
      validateCerts: false

microServices:
  corePlatformUrl: {COREPLATURL}
