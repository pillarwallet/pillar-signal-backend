version: 2
jobs:
  build:

    working_directory: ~/pillar-signal-backend # directory where steps will run

    docker: # run the steps with Docker
      - image: maven:3.5.4-jdk-8-alpine

    environment:
      SIGNAL_VERSION: 1.66

    steps:

      - checkout # check out source code to working directory

      - run:
          name: Authenticate with FCM
          command: |
            touch config/firebase-auth.json
            echo "$FIREBASE_AUTH_JSON_BASE64_ENCODED" | base64 -d > config/firebase-auth.json

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          key: signal-backend-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: signal-backend-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          path: target/surefire-reports

      - store_artifacts: # store the jar as an artifact
          path: target/TextSecureServer-1.66-bin.tar.gz


      - run:
          name: Publish Artifact and Notification
          command: |
            export publishedArtifact="$SIGNAL_ARTIFACTORY_URL/signal-backend-$CIRCLE_BUILD_NUM.tar.gz"
            curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD -T target/TextSecureServer-1.66-bin.tar.gz  $publishedArtifact
            chmod +x .circleci/announceRelease.sh && .circleci/announceRelease.sh "SIGNAL-BACKEND" "$publishedArtifact"

  whitesource:
    working_directory: ~/pillar-signal-backend
    docker:
      - image: circleci/openjdk:8-node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/pillar-signal-backend/workspace
      - run :
          name: Setup WhiteSource
          command: curl -LJO https://github.com/whitesource/fs-agent-distribution/raw/master/standAlone/wss_agent.sh
      - run:
          name: execute whitesource
          command: |
            cd .whitesource/
            chmod +x wss_agent.sh && ./wss_agent.sh -apiKey $WHITESOURCE_API_KEY -c ./whitesource-fs-agent.config  -project pillar-signal-backend -f files.list

workflows:
  version: 2
  build_and_deploy_to_artifactory:
    jobs:
      - whitesource:
          filters:
            branches:
              only:
                - develop
      - build:
          filters:
            branches:
              only:
                - master
